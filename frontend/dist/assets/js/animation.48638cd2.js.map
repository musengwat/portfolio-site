{"version":3,"file":"animation.48638cd2.js","sources":["../../../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../../../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../../../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../../../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../../../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../../../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../../../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../../../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../../../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../../../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../../../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../../../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../../../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../../../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../../../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../../../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../../../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../../../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../../../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../../../node_modules/framer-motion/dist/es/motion/index.mjs","../../../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../../../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../../../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../../../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../../../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../../../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../../../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../../../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../../../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../../../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../../../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../../../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../../../node_modules/framer-motion/dist/es/utils/clamp.mjs","../../../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../../../node_modules/framer-motion/dist/es/value/types/utils.mjs","../../../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../../../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../../../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../../../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../../../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../../../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../../../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../../../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../../../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../../../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../../../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../../../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../../../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../../../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../../../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../../../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../../../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../../../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../../../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../../../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../../../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../../../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../../../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../../../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../../../node_modules/framer-motion/dist/es/utils/noop.mjs","../../../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../../../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../../../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../../../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../../../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../../../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../../../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../../../node_modules/framer-motion/dist/es/events/event-info.mjs","../../../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../../../node_modules/framer-motion/dist/es/utils/pipe.mjs","../../../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../../../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../../../node_modules/framer-motion/dist/es/gestures/hover.mjs","../../../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../../../node_modules/framer-motion/dist/es/gestures/press.mjs","../../../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../../../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../../../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../../../node_modules/framer-motion/dist/es/gestures/focus.mjs","../../../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../../../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../../../node_modules/framer-motion/dist/es/utils/errors.mjs","../../../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../../../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../../../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../../../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../../../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../../../node_modules/framer-motion/dist/es/easing/ease.mjs","../../../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../../../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../../../node_modules/framer-motion/dist/es/easing/circ.mjs","../../../node_modules/framer-motion/dist/es/easing/back.mjs","../../../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../../../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../../../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../../../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../../../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../../../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../../../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../../../node_modules/framer-motion/dist/es/utils/mix.mjs","../../../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../../../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../../../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../../../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../../../node_modules/framer-motion/dist/es/utils/progress.mjs","../../../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../../../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../../../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../../../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../../../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../../../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../../../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../../../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../../../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../../../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../../../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../../../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../../../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../../../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../../../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../../../node_modules/framer-motion/dist/es/utils/memo.mjs","../../../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../../../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../../../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../../../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../../../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../../../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../../../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../../../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../../../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../../../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../../../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../../../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../../../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../../../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../../../node_modules/framer-motion/dist/es/utils/array.mjs","../../../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../../../node_modules/framer-motion/dist/es/value/index.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../../../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../../../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../../../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../../../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../../../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../../../node_modules/framer-motion/dist/es/utils/distance.mjs","../../../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../../../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../../../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../../../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../../../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../../../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../../../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../../../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../../../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../../../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../../../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../../../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../../../node_modules/framer-motion/dist/es/projection/node/state.mjs","../../../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../../../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../../../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../../../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../../../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../../../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../../../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../../../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../../../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../../../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../../../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../../../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../../../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../../../node_modules/framer-motion/dist/es/debug/record.mjs","../../../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../../../node_modules/framer-motion/dist/es/utils/delay.mjs","../../../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../../../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../../../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../../../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../../../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../../../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../../../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../../../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../../../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../../../node_modules/framer-motion/dist/es/render/store.mjs","../../../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../../../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../../../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../../../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../../../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../../../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../../../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../../../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../../../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../../../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","../../../node_modules/framer-motion/dist/es/utils/use-is-mounted.mjs","../../../node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","../../../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","../../../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","../../../node_modules/framer-motion/dist/es/utils/use-force-update.mjs","../../../node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs"],"sourcesContent":["import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const wantsHandoff = useRef(Boolean(props[optimizedAppearDataAttribute] && !window.HandoffComplete));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.render();\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            wantsHandoff.current = false;\n            // This ensures all future calls to animateChanges() will run in useEffect\n            window.HandoffComplete = true;\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\nconst cssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g;\n\nexport { cssVariableRegex, isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","const noop = (any) => any;\n\nexport { noop };\n","class Queue {\n    constructor() {\n        this.order = [];\n        this.scheduled = new Set();\n    }\n    add(process) {\n        if (!this.scheduled.has(process)) {\n            this.scheduled.add(process);\n            this.order.push(process);\n            return true;\n        }\n    }\n    remove(process) {\n        const index = this.order.indexOf(process);\n        if (index !== -1) {\n            this.order.splice(index, 1);\n            this.scheduled.delete(process);\n        }\n    }\n    clear() {\n        this.order.length = 0;\n        this.scheduled.clear();\n    }\n}\nfunction createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Queue();\n    let nextFrame = new Queue();\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (queue.add(callback) && addToCurrentFrame && isProcessing) {\n                // If we're adding it to the currently running queue, update its measured size\n                numToRun = thisFrame.order.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.remove(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            numToRun = thisFrame.order.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = thisFrame.order[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"prepare\",\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0,\n        timestamp: 0,\n        isProcessing: false,\n    };\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(() => (runNextFrame = true));\n        return acc;\n    }, {});\n    const processStep = (stepId) => steps[stepId].process(state);\n    const processBatch = () => {\n        const timestamp = performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        stepsOrder.forEach(processStep);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => stepsOrder.forEach((key) => steps[key].cancel(process));\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !globalTapTarget &&\n                        !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        if (process.env.NODE_ENV !== \"production\") {\n            invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n        }\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (speed < 0)\n            startTime = Math.min(timestamp - totalDuration / speed, startTime);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            currentTime = Math.round(timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay * (speed >= 0 ? 1 : -1);\n        const isInDelayPhase = speed >= 0 ? timeWithoutDelay < 0 : timeWithoutDelay > totalDuration;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = speed >= 0 ? currentTime >= totalDuration : currentTime <= 0;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" || (playState === \"running\" && done));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        resolveFinishedPromise();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        resolveFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        if (playState === \"finished\") {\n            updateFinishedPromise();\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { memo } from '../../../utils/memo.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supportsWaapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Cancelling an animation will write to the DOM. For safety we want to defer\n     * this until the next `update` frame lifecycle. This flag tracks whether we\n     * have a pending cancel, if so we shouldn't allow animations to finish.\n     */\n    let pendingCancel = false;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const cancelAnimation = () => {\n        pendingCancel = false;\n        animation.cancel();\n    };\n    const safeCancel = () => {\n        pendingCancel = true;\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        if (pendingCancel)\n            return;\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        attachTimeline(timeline) {\n            animation.timeline = timeline;\n            animation.onfinish = null;\n            return noop;\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => {\n            if (pendingCancel)\n                return;\n            animation.finish();\n        },\n        cancel: safeCancel,\n    };\n    return controls;\n}\n\nexport { createAcceleratedAnimation };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n};\n\nexport { MotionGlobalConfig };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false ||\n            MotionGlobalConfig.skipAnimations) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(instantAnimationState.current\n                ? { ...options, delay: 0 }\n                : options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (\n        /**\n         * If this is a handoff animation, the optimised animation will be running via\n         * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n         * optimised animation.\n         */\n        !transition.isHandoff &&\n            value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame, frameData } from '../frameloop/frame.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.18.0\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/transitions.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction hasKeyframesChanged(value, target) {\n    const current = value.get();\n    if (Array.isArray(target)) {\n        for (let i = 0; i < target.length; i++) {\n            if (target[i] !== current)\n                return true;\n        }\n    }\n    else {\n        return current !== target;\n    }\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                const elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n                if (elapsed !== null) {\n                    valueTransition.elapsed = elapsed;\n                    valueTransition.isHandoff = true;\n                }\n            }\n        }\n        let canSkip = !valueTransition.isHandoff &&\n            !hasKeyframesChanged(value, valueTarget);\n        if (valueTransition.type === \"spring\" &&\n            (value.getVelocity() || valueTransition.velocity)) {\n            canSkip = false;\n        }\n        /**\n         * Temporarily disable skipping animations if there's an animation in\n         * progress. Better would be to track the current target of a value\n         * and compare that against valueTarget.\n         */\n        if (value.animation) {\n            canSkip = false;\n        }\n        if (canSkip)\n            continue;\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             */\n            if (shouldAnimateType && (!isInherited || handledRemovedValues)) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            queueMicrotask(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = performance.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                queueMicrotask(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if ((this.type === \"html\" || this.type === \"svg\") &&\n            !this.projection &&\n            ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        var _a;\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.18.0\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.18.0 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","import { useRef } from 'react';\nimport { useIsomorphicLayoutEffect } from './use-isomorphic-effect.mjs';\n\nfunction useIsMounted() {\n    const isMounted = useRef(false);\n    useIsomorphicLayoutEffect(() => {\n        isMounted.current = true;\n        return () => {\n            isMounted.current = false;\n        };\n    }, []);\n    return isMounted;\n}\n\nexport { useIsMounted };\n","import * as React from 'react';\nimport { useId, useRef, useInsertionEffect } from 'react';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n    });\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            top: ${top}px !important;\n            left: ${left}px !important;\n          }\n        `);\n        }\n        return () => {\n            document.head.removeChild(style);\n        };\n    }, [isPresent]);\n    return (React.createElement(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size }, React.cloneElement(children, { ref })));\n}\n\nexport { PopChild };\n","import * as React from 'react';\nimport { useId, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    const context = useMemo(() => ({\n        id,\n        initial,\n        isPresent,\n        custom,\n        onExitComplete: (childId) => {\n            presenceChildren.set(childId, true);\n            for (const isComplete of presenceChildren.values()) {\n                if (!isComplete)\n                    return; // can stop searching when any is incomplete\n            }\n            onExitComplete && onExitComplete();\n        },\n        register: (childId) => {\n            presenceChildren.set(childId, false);\n            return () => presenceChildren.delete(childId);\n        },\n    }), \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout ? undefined : [isPresent]);\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = React.createElement(PopChild, { isPresent: isPresent }, children);\n    }\n    return (React.createElement(PresenceContext.Provider, { value: context }, children));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import * as React from 'react';\nimport { useContext, useRef, cloneElement, Children, isValidElement } from 'react';\nimport { useForceUpdate } from '../../utils/use-force-update.mjs';\nimport { useIsMounted } from '../../utils/use-is-mounted.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { useUnmountEffect } from '../../utils/use-unmount-effect.mjs';\nimport { invariant } from '../../utils/errors.mjs';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction updateChildLookup(children, allChildren) {\n    children.forEach((child) => {\n        const key = getChildKey(child);\n        allChildren.set(key, child);\n    });\n}\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, exitBeforeEnter, presenceAffectsLayout = true, mode = \"sync\", }) => {\n    invariant(!exitBeforeEnter, \"Replace exitBeforeEnter with mode='wait'\");\n    // We want to force a re-render once all exiting animations have finished. We\n    // either use a local forceRender function, or one from a parent context if it exists.\n    const forceRender = useContext(LayoutGroupContext).forceRender || useForceUpdate()[0];\n    const isMounted = useIsMounted();\n    // Filter out any children that aren't ReactElements. We can only track ReactElements with a props.key\n    const filteredChildren = onlyElements(children);\n    let childrenToRender = filteredChildren;\n    const exitingChildren = useRef(new Map()).current;\n    // Keep a living record of the children we're actually rendering so we\n    // can diff to figure out which are entering and exiting\n    const presentChildren = useRef(childrenToRender);\n    // A lookup table to quickly reference components by key\n    const allChildren = useRef(new Map()).current;\n    // If this is the initial component render, just deal with logic surrounding whether\n    // we play onMount animations or not.\n    const isInitialRender = useRef(true);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        updateChildLookup(filteredChildren, allChildren);\n        presentChildren.current = childrenToRender;\n    });\n    useUnmountEffect(() => {\n        isInitialRender.current = true;\n        allChildren.clear();\n        exitingChildren.clear();\n    });\n    if (isInitialRender.current) {\n        return (React.createElement(React.Fragment, null, childrenToRender.map((child) => (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, initial: initial ? undefined : false, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child)))));\n    }\n    // If this is a subsequent render, deal with entering and exiting children\n    childrenToRender = [...childrenToRender];\n    // Diff the keys of the currently-present and target children to update our\n    // exiting list.\n    const presentKeys = presentChildren.current.map(getChildKey);\n    const targetKeys = filteredChildren.map(getChildKey);\n    // Diff the present children with our target children and mark those that are exiting\n    const numPresent = presentKeys.length;\n    for (let i = 0; i < numPresent; i++) {\n        const key = presentKeys[i];\n        if (targetKeys.indexOf(key) === -1 && !exitingChildren.has(key)) {\n            exitingChildren.set(key, undefined);\n        }\n    }\n    // If we currently have exiting children, and we're deferring rendering incoming children\n    // until after all current children have exiting, empty the childrenToRender array\n    if (mode === \"wait\" && exitingChildren.size) {\n        childrenToRender = [];\n    }\n    // Loop through all currently exiting components and clone them to overwrite `animate`\n    // with any `exit` prop they might have defined.\n    exitingChildren.forEach((component, key) => {\n        // If this component is actually entering again, early return\n        if (targetKeys.indexOf(key) !== -1)\n            return;\n        const child = allChildren.get(key);\n        if (!child)\n            return;\n        const insertionIndex = presentKeys.indexOf(key);\n        let exitingComponent = component;\n        if (!exitingComponent) {\n            const onExit = () => {\n                // clean up the exiting children map\n                exitingChildren.delete(key);\n                // compute the keys of children that were rendered once but are no longer present\n                // this could happen in case of too many fast consequent renderings\n                // @link https://github.com/framer/motion/issues/2023\n                const leftOverKeys = Array.from(allChildren.keys()).filter((childKey) => !targetKeys.includes(childKey));\n                // clean up the all children map\n                leftOverKeys.forEach((leftOverKey) => allChildren.delete(leftOverKey));\n                // make sure to render only the children that are actually visible\n                presentChildren.current = filteredChildren.filter((presentChild) => {\n                    const presentChildKey = getChildKey(presentChild);\n                    return (\n                    // filter out the node exiting\n                    presentChildKey === key ||\n                        // filter out the leftover children\n                        leftOverKeys.includes(presentChildKey));\n                });\n                // Defer re-rendering until all exiting children have indeed left\n                if (!exitingChildren.size) {\n                    if (isMounted.current === false)\n                        return;\n                    forceRender();\n                    onExitComplete && onExitComplete();\n                }\n            };\n            exitingComponent = (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: false, onExitComplete: onExit, custom: custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n            exitingChildren.set(key, exitingComponent);\n        }\n        childrenToRender.splice(insertionIndex, 0, exitingComponent);\n    });\n    // Add `MotionContext` even to children that don't need it to ensure we're rendering\n    // the same tree between renders\n    childrenToRender = childrenToRender.map((child) => {\n        const key = child.key;\n        return exitingChildren.has(key) ? (child) : (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n    });\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        childrenToRender.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    return (React.createElement(React.Fragment, null, exitingChildren.size\n        ? childrenToRender\n        : childrenToRender.map((child) => cloneElement(child))));\n};\n\nexport { AnimatePresence };\n","import { useState, useCallback } from 'react';\nimport { useIsMounted } from './use-is-mounted.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction useForceUpdate() {\n    const isMounted = useIsMounted();\n    const [forcedRenderCount, setForcedRenderCount] = useState(0);\n    const forceRender = useCallback(() => {\n        isMounted.current && setForcedRenderCount(forcedRenderCount + 1);\n    }, [forcedRenderCount]);\n    /**\n     * Defer this to the end of the next animation frame in case there are multiple\n     * synchronous calls.\n     */\n    const deferredForceRender = useCallback(() => frame.postRender(forceRender), [forceRender]);\n    return [deferredForceRender, forcedRenderCount];\n}\n\nexport { useForceUpdate };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n"],"names":["MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","PresenceContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","isRefObject","ref","Object","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","props","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","initial","context","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","key","isEnabled","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","__spreadValues","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","__spreadProps","layoutId","useLayoutId","visualState","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","useInsertionEffect","update","wantsHandoff","window","HandoffComplete","render","animationState","animateChanges","updateFeatures","useVisualElement","initialLayoutGroupConfig","isStrict","React.createElement","createElement","Provider","value","useCallback","instance","mount","unmount","useMotionRef","layoutGroupId","id","createMotionProxy","createConfig","custom","customMotionComponentConfig","Proxy","componentCache","Map","get","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","length","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","transform","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","enableHardwareAcceleration","allowTransformNone","transformIsDefault","transformString","i","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","_b","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","__objRest","viewBox","attrs","dimensions","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","children","renderedChildren","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","useConstant","init","isKeyframesTarget","resolveMotionValue","unwrappedValue","mix","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","forEach","resolved","transitionEnd","transition","valueTarget","noop","any","Queue","constructor","this","order","scheduled","add","process","push","remove","index","splice","delete","clear","stepsOrder","schedule","frame","cancel","cancelFrame","frameData","steps","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","delta","timestamp","isProcessing","reduce","acc","thisFrame","nextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","callback","keepAlive","immediate","addToCurrentFrame","queue","createRenderStep","processStep","stepId","processBatch","performance","now","createRenderBatcher","requestAnimationFrame","svgMotionConfig","read","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerEvent","addPointerInfo","combineFunctions","a","b","pipe","transformers","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","isMounted","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","isNodeOrChild","child","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","_c","_d","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","gestureAnimations","super","arguments","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","removePointerListener","removeFocusListener","onFocus","isFocusVisible","matches","onBlur","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","warning","invariant","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","map","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","x1","y1","x2","y2","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","color","from","to","progress","hueToRgb","q","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","cssVarTokeniser","regex","countKey","colorTokeniser","numberTokeniser","tokenise","tokenised","analyseComplexValue","originalValue","toString","numVars","numColors","numNumbers","parseComplexValue","createTransformer","numValues","output","convertNumbersToZero","complex","isNaN","getAnimatableNone","parsed","transformer","mixImmediate","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframes","duration","keyframeValues","times","easingFunctions","isEasingArray","done","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","calculatedDuration","velocityPerSecond","frameDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","findSpring","bounce","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","initialGuess","result","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","_e","_f","restDelta","restSpeed","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","stop","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","_g","_h","autoplay","delay","driver","keyframes$1","repeat","repeatDelay","repeatType","onPlay","onStop","onComplete","onUpdate","resolveFinishedPromise","currentFinishedPromise","speed","hasStopped","updateFinishedPromise","Promise","resolve","animationDriver","generatorFactory","mapNumbersToKeyframes","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","stopAnimationDriver","finish","play","controls","then","reject","time","newTime","newSpeed","pause","complete","sample","supportsWaapi","memo","Element","acceleratedValues","createAcceleratedAnimation","valueName","_i","_j","pendingCancel","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","keyframeOptions","fill","iterations","direction","animateStyle","owner","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","attachTimeline","timeline","playbackRate","setWithVelocity","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZeroValueString","isNone","getValueTransition","MotionGlobalConfig","animateMotionValue","valueTransition","isTargetAnimatable","defaultOrigin","animatableTemplateValue","noneKeyframeIndexes","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","_k","_l","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","setValue","createInstantAnimation","isHandoff","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","isNumericalString","addUniqueItem","item","removeItem","SubscriptionManager","subscriptions","notify","numSubscriptions","getSize","MotionValue","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","postRender","scheduleVelocityCheck","change","velocityChange","renderRequest","velocityCheck","hasAnimated","onChange","subscription","on","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","jump","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","setMotionValue","hasValue","getValue","addValue","getOriginFromTransition","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","hasKeyframesChanged","animateTarget","transitionOverride","makeTargetAnimatable","willChange","animations","animationTypeState","getState","HandoffAppearAnimations","appearId","canSkip","shouldReduceMotion","setTarget","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","shouldAnimateType","checkVariantsDidChange","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","valueHasChanged","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","updateAnimationControlsSubscription","subscribe","prevAnimate","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","__pow","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","getContextWindow","ownerDocument","defaultView","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","React__default","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","queueMicrotask","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEqualsRounded","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","transformAxes","hiddenVisibility","visibility","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","args","subscriptionManager","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","preRender","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionTransform","projectionDeltaWithTransform","prevProjectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasRotate","resetValues","setStaticValue","styles","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","splitCSSVariableRegex","getVariableValue","fallback","exec","parseCSSVariable","getPropertyValue","trimmed","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","fromType","toType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","scrollY","pageYOffset","convertedTarget","changedKeys","originBbox","elementComputedStyle","targetBbox","convertChangedValueTypes","scrollTo","unitConversion","hasPositionalKey","parseDomVariant","_m","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","_n","_o","renderedProps","ProjectionNodeConstructor","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","getStaticValue","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","startAtParent","closestVariantNode","removeValueFromRenderState","readValue","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","_p","_q","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","checkTargetForNewValues","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","createDomVisualElement","motion","baseConfig","createDomMotionConfig","useIsMounted","PopChildMeasure","React.Component","childRef","sizeRef","offsetHeight","offsetWidth","offsetTop","offsetLeft","PopChild","dataset","motionPopId","head","appendChild","sheet","insertRule","removeChild","React.cloneElement","PresenceChild","presenceAffectsLayout","mode","presenceChildren","newChildrenMap","childId","isComplete","_","React.useEffect","getChildKey","AnimatePresence","exitBeforeEnter","forceRender","forcedRenderCount","setForcedRenderCount","useState","useForceUpdate","filteredChildren","filtered","Children","isValidElement","onlyElements","childrenToRender","exitingChildren","presentChildren","allChildren","updateChildLookup","React.Fragment","Fragment","presentKeys","targetKeys","numPresent","component","insertionIndex","exitingComponent","onExit","leftOverKeys","childKey","leftOverKey","presentChild","presentChildKey","cloneElement"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210]}